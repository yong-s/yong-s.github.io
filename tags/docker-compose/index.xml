<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>docker-compose on 张三的网络日志</title>
    <link>https://blog.zsan.ml/tags/docker-compose/</link>
    <description>Recent content in docker-compose on 张三的网络日志</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <copyright>&lt;a href=&#34;https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh&#34; target=&#34;_blank&#34;&gt;CC BY-NC-SA 4.0&lt;/a&gt;</copyright>
    <lastBuildDate>Fri, 08 Apr 2022 16:23:01 +0800</lastBuildDate><atom:link href="https://blog.zsan.ml/tags/docker-compose/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Docker 部署 Nginx服务</title>
      <link>https://blog.zsan.ml/posts/docker-build-nginx/</link>
      <pubDate>Fri, 08 Apr 2022 16:23:01 +0800</pubDate>
      
      <guid>https://blog.zsan.ml/posts/docker-build-nginx/</guid>
      <description>用docker部署nginx官方只给了docker版本的，没有compose的，只好</description>
      <content:encoded><![CDATA[<blockquote>
<p>用docker部署nginx官方只给了docker版本的，没有compose的，只好自己转换一下了，记录一下，方便下次部署，这只是简单的部署，至于nginx配置的话，有空再补吧🫠</p>
</blockquote>
<h2 id="1创建docker-nginx目录">1、创建docker-nginx目录</h2>
<p>新建 docker-compose.yml 文件</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span>mkdir docker-nginx
</span></span><span style="display:flex;"><span>mkdir nginx
</span></span><span style="display:flex;"><span>mkdir log
</span></span><span style="display:flex;"><span>mkdir html
</span></span><span style="display:flex;"><span>vim docker-compose.yml
</span></span></code></pre></div><h2 id="2docker-composeyml">2、docker-compose.yml</h2>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-yml" data-lang="yml"><span style="display:flex;"><span><span style="color:#f92672">version</span>: <span style="color:#e6db74">&#39;3.3&#39;</span> 
</span></span><span style="display:flex;"><span><span style="color:#f92672">services</span>:
</span></span><span style="display:flex;"><span> <span style="color:#f92672">web</span>:
</span></span><span style="display:flex;"><span> <span style="color:#f92672">image</span>: <span style="color:#ae81ff">nginx:latest</span>
</span></span><span style="display:flex;"><span> <span style="color:#f92672">container_name</span>: <span style="color:#ae81ff">nginx</span>
</span></span><span style="display:flex;"><span> <span style="color:#f92672">volumes</span>:
</span></span><span style="display:flex;"><span>     - <span style="color:#ae81ff">./nginx:/etc/nginx</span>
</span></span><span style="display:flex;"><span>     - <span style="color:#ae81ff">./log:/var/log/nginx</span>
</span></span><span style="display:flex;"><span>     - <span style="color:#ae81ff">./html:/usr/share/nginx/html  //网站放置目录</span>
</span></span><span style="display:flex;"><span> <span style="color:#f92672">ports</span>:
</span></span><span style="display:flex;"><span>     - <span style="color:#e6db74">&#34;8081:80&#34;</span>
</span></span><span style="display:flex;"><span> <span style="color:#f92672">environment</span>:
</span></span><span style="display:flex;"><span>     - <span style="color:#ae81ff">NGINX_HOST=&#34;192.168.116.10&#34; //访问地址/域名</span>
</span></span><span style="display:flex;"><span>     - <span style="color:#ae81ff">NGINX_PORT=&#34;80&#34; //访问端口</span>
</span></span><span style="display:flex;"><span>     - <span style="color:#ae81ff">TZ=&#34;Asia/Shanghai&#34; //时区</span>
</span></span><span style="display:flex;"><span> <span style="color:#f92672">restart</span>: <span style="color:#ae81ff">always</span>
</span></span></code></pre></div><h2 id="3手动cp配置文件">3、手动cp配置文件</h2>
<p>由于官方image没有默认映射外部文件，需要手动把配置文件cp出来</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span><span style="color:#75715e"># 运行官方命令创建默认容器</span>
</span></span><span style="display:flex;"><span>docker run --name nginx -p 8080:80 -d nginx
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#75715e">#配置文件复制到nginx里,其他文件可用复制</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e">#是个坑，路径必须是全路径</span>
</span></span><span style="display:flex;"><span>docker cp nginx:/etc/nginx /opt/docker-nginx
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#75715e">#删除默认容器</span>
</span></span><span style="display:flex;"><span>docker stop nginx <span style="color:#f92672">&amp;&amp;</span> docker rm nginx
</span></span></code></pre></div><h2 id="4修改nginx配置文件">4、修改nginx配置文件</h2>
<p>端口号、域名，ssl等和以前配置一样，不再赘述</p>
<h2 id="5运行测试">5、运行&amp;测试</h2>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span>docker-compose up -d
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#75715e">#查看日志</span>
</span></span><span style="display:flex;"><span>docker-compose logs -f     
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#75715e">#浏览器输入IP或域名查看是否可以访问</span>
</span></span></code></pre></div><hr>
<p>参考文档：</p>
<blockquote>
<p>1、<a href="https://hub.docker.com/_/nginx">Docker Hub-nginx</a></p>
</blockquote>
]]></content:encoded>
    </item>
    
    <item>
      <title>Docker Compose部署filebrowser</title>
      <link>https://blog.zsan.ml/posts/docker-deploy-filebrowser/</link>
      <pubDate>Fri, 21 Jan 2022 11:24:05 +0800</pubDate>
      
      <guid>https://blog.zsan.ml/posts/docker-deploy-filebrowser/</guid>
      <description>docker快速搭建个人网盘</description>
      <content:encoded><![CDATA[<p>在linuxserver服务器上安装</p>
<p>环境：docker、docker- compose</p>
<p>需要了解docker基本知识，不懂可以翻翻以前的博客或者搜下教程学习</p>
<p><a href="https://filebrowser.org/installation">filebrowser</a>官网上给的是docker命令执行的，但用compose习惯了，所以转换了一下格式，但是这里有个坑，官网也提示了</p>
<blockquote>
<p>By default, we already have a <a href="https://github.com/filebrowser/filebrowser/blob/master/docker/root/defaults/settings.json">configuration file with some defaults</a> so you can just mount the root and the database. Although you can overwrite by mounting a directory with a new config file. If you don&rsquo;t already have a database file, make sure to create a new empty file under the path you specified. Otherwise, Docker will create an empty folder instead of an empty file, resulting in an error when mounting the database into the container.</p>
</blockquote>
<p>翻译过来就是需要提前创建所需的文件和文件夹，否则，Docker会创建一个空的文件夹而不是空的文件，导致在将数据库挂载到容器中时出现错误！这点一定要注意啊！！！</p>
<h1 id="1创建docker-compose文件">1、创建docker-compose文件</h1>
<p>内容如下：</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-yml" data-lang="yml"><span style="display:flex;"><span><span style="color:#f92672">version</span>: <span style="color:#e6db74">&#39;3.3&#39;</span> 
</span></span><span style="display:flex;"><span><span style="color:#f92672">services</span>:     
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">filebrowser</span>:  
</span></span><span style="display:flex;"><span>        <span style="color:#f92672">image</span>: <span style="color:#ae81ff">filebrowser/filebrowser:s6</span>
</span></span><span style="display:flex;"><span>        <span style="color:#f92672">container_name</span>: <span style="color:#ae81ff">filebrowser</span>
</span></span><span style="display:flex;"><span>        <span style="color:#f92672">volumes</span>:  
</span></span><span style="display:flex;"><span>            - <span style="color:#ae81ff">./root:/srv           </span>
</span></span><span style="display:flex;"><span>            - <span style="color:#ae81ff">./database/filebrowser.db:/database/filebrowser.db </span>
</span></span><span style="display:flex;"><span>            - <span style="color:#ae81ff">./settings.json:/config/settings.json</span>
</span></span><span style="display:flex;"><span>        <span style="color:#f92672">environment</span>:
</span></span><span style="display:flex;"><span>            - <span style="color:#ae81ff">PUID=0</span>
</span></span><span style="display:flex;"><span>            - <span style="color:#ae81ff">PGID=0</span>
</span></span><span style="display:flex;"><span>        <span style="color:#f92672">ports</span>: 
</span></span><span style="display:flex;"><span>            - <span style="color:#e6db74">&#39;8080:80&#39;</span>         
</span></span><span style="display:flex;"><span>        <span style="color:#f92672">restart</span>: <span style="color:#ae81ff">always</span>
</span></span></code></pre></div><h1 id="2创建默认文件和文件夹">2、创建默认文件和文件夹</h1>
<p>对照上述docker-compose的路径，需要在当前目录创建 settings.json 文件，内容如下：</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-json" data-lang="json"><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>  <span style="color:#f92672">&#34;port&#34;</span>: <span style="color:#ae81ff">80</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#f92672">&#34;baseURL&#34;</span>: <span style="color:#e6db74">&#34;&#34;</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#f92672">&#34;address&#34;</span>: <span style="color:#e6db74">&#34;0.0.0.0&#34;</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#f92672">&#34;log&#34;</span>: <span style="color:#e6db74">&#34;stdout&#34;</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#f92672">&#34;database&#34;</span>: <span style="color:#e6db74">&#34;/database/filebrowser.db&#34;</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#f92672">&#34;root&#34;</span>: <span style="color:#e6db74">&#34;/srv&#34;</span>
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><p>在当前目录创建 database/filebrowser.db 文件夹和文件</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>mkdir database
</span></span><span style="display:flex;"><span>cd database
</span></span><span style="display:flex;"><span>touch filebrowser.db
</span></span></code></pre></div><h1 id="3运行测试是否成功">3、运行测试是否成功</h1>
<p>执行 docker- compose logs -f 看下日志是否报错</p>
<p>需要其他机器访问记得防火墙 把端口打开，本例用的8080端口</p>
<p>浏览器访问 服务器ip:8080 成功打开即可，Enjoy it！🎉🎉🎉</p>
<h1 id="4n1小钢炮安装">4、n1小钢炮安装</h1>
<blockquote>
<p>灯大魔改的好久没更新了，功能好多不支持了，今天给升级（踩坑）了一下</p>
</blockquote>
<p>1、docker-compose需要改下配置</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-yaml" data-lang="yaml"><span style="display:flex;"><span><span style="color:#f92672">version</span>: <span style="color:#e6db74">&#39;3.3&#39;</span> 
</span></span><span style="display:flex;"><span><span style="color:#f92672">services</span>:     
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">filebrowser</span>:  
</span></span><span style="display:flex;"><span>        <span style="color:#f92672">image</span>: <span style="color:#ae81ff">filebrowser/filebrowser</span>
</span></span><span style="display:flex;"><span>        <span style="color:#f92672">container_name</span>: <span style="color:#ae81ff">filebrowser</span>
</span></span><span style="display:flex;"><span>        <span style="color:#f92672">volumes</span>:  
</span></span><span style="display:flex;"><span>            - <span style="color:#ae81ff">/media:/srv           </span>
</span></span><span style="display:flex;"><span>            - <span style="color:#ae81ff">./database/filebrowser.db:/database/filebrowser.db </span>
</span></span><span style="display:flex;"><span>            - <span style="color:#ae81ff">./settings.json:/config/settings.json</span>
</span></span><span style="display:flex;"><span>            - <span style="color:#ae81ff">/etc/timezone:/etc/timezone   </span> <span style="color:#75715e">#时区 cst</span>
</span></span><span style="display:flex;"><span>            - <span style="color:#ae81ff">/etc/localtime:/etc/localtime </span> <span style="color:#75715e">#时区 cst</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>        <span style="color:#f92672">environment</span>:
</span></span><span style="display:flex;"><span>            - <span style="color:#ae81ff">PUID=1002</span>
</span></span><span style="display:flex;"><span>            - <span style="color:#ae81ff">PGID=100</span>
</span></span><span style="display:flex;"><span>              <span style="color:#75715e"># - TZ=Asia/Shanghai</span>
</span></span><span style="display:flex;"><span>        <span style="color:#f92672">ports</span>: 
</span></span><span style="display:flex;"><span>            - <span style="color:#e6db74">&#39;8081:80&#39;</span>         
</span></span><span style="display:flex;"><span>        <span style="color:#f92672">restart</span>: <span style="color:#ae81ff">always</span>
</span></span></code></pre></div><p>2、灯大版的移除，执行这个即可</p>
<p>两个小坑，1、镜像要用laster的 2、时区设置用挂载的</p>
<blockquote>
<p>参考：</p>
<p>1、<a href="https://filebrowser.org">filebrowser官网</a></p>
<p>2、<a href="https://www.liuhaolin.com/zhuanzai/906.html">filebrowser 一个跨平台的文件管理器的使用方法-森林的个人博客</a></p>
</blockquote>
]]></content:encoded>
    </item>
    
  </channel>
</rss>
